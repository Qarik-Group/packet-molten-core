etcd:
  # All options get passed as command line flags to etcd.
  # Any information inside curly braces comes from the machine at boot time.

  # multi_region and multi_cloud deployments need to use {PUBLIC_IPV4}
  advertise_client_urls:       "http://{PRIVATE_IPV4}:2379"
  initial_advertise_peer_urls: "http://{PRIVATE_IPV4}:2380"
  # listen on both the official ports and the legacy ports
  # legacy ports can be omitted if your application doesn't depend on them
  listen_client_urls:          "http://0.0.0.0:2379"
  listen_peer_urls:            "http://{PRIVATE_IPV4}:2380"
  # generate a new token for each unique cluster from https://discovery.etcd.io/new?size=3
  # specify the initial size of your cluster with ?size=X
  discovery:                   "${discovery_url}"

locksmith:
  reboot_strategy: "etcd-lock"
  # reboot_strategy: reboot
  # window_start: Thu 04:00
  # window_length: 1h

storage:
  files:
  - path: /var/ssl/docker/ca.pem
    filesystem: root
    contents:
      inline: |
        ${indent(8, docker_ca)}
    mode: 0644
    user: { id: 500 }
    group: { id: 500 }
  - path: /var/ssl/docker/key.pem
    filesystem: root
    contents:
      inline: |
        ${indent(8, docker_key)}
    mode: 0644
    user: { id: 500 }
    group: { id: 500 }

systemd:
  units:
  - name: flanneld.service
    dropins:
    - name: 50-network-config.conf
      contents: |
        [Service]
        ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.1.0.0/16" }'
  - name: docker.service
    dropins:
    - name: 50-enable-tls.conf
      contents: |
        [Service]
        EnvironmentFile=/run/metadata/coreos
        Environment=DOCKER_CA=/var/ssl/docker/ca.pem
        Environment=DOCKER_CERT=/var/ssl/docker/cert.pem
        Environment=DOCKER_KEY=/var/ssl/docker/key.pem
        Environment=DOCKER_CSR=/var/ssl/docker/cert.csr
        Environment=DOCKER_EXTCNF=/var/ssl/docker/extfile.cnf
        ExecStartPre=openssl req -subj "/CN=$${COREOS_PACKET_IPV4_PUBLIC_0}" -sha256 -new -key $${DOCKER_KEY} -out $${DOCKER_CSR}
        ExecStartPre=/bin/sh -c 'echo "subjectAltName = IP:$${COREOS_PACKET_IPV4_PUBLIC_0},IP:127.0.0.1" > $${DOCKER_EXTCNF}'
        ExecStartPre=/bin/sh -c 'echo "extendedKeyUsage = serverAuth" >> $${DOCKER_EXTCNF}'
        ExecStartPre=openssl x509 -req -days 365 -sha256 -in $${DOCKER_CSR} -CA $${DOCKER_CA} -CAkey $${DOCKER_KEY} -CAcreateserial -out $${DOCKER_CERT} -extfile $${DOCKER_EXTCNF}
        Environment=DOCKER_OPTS="--tlsverify --tlscacert=/var/ssl/docker/ca.pem --tlscert=/var/ssl/docker/cert.pem --tlskey=/var/ssl/docker/key.pem -H 0.0.0.0:4243"

flannel: ~
